name: .NET Desktop

on:
  workflow_dispatch:
    branches: [ master ]
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
        targetplatform: [x64]

    runs-on: windows-latest

    env:
      Solution_Name: NdiPlayer.sln                            

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
      
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore packages
      run: msbuild $env:Solution_Name -restore
      
    - name: Build Application
      run: msbuild $env:Solution_Name /p:Platform=x64 /p:Configuration=Release /p:UapAppxPackageBuildMode=SideloadOnly /p:AppxBundle=Always

    - name: 'Get Previous tag'
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"

    - name: Create a csproj-based Release
      # You may pin to the exact commit or the version.
      # uses: lukacat10/create-release@8e1e5fb65de580de9ff9a08a41a67a097990f694
      uses: lukacat10/create-release@csprojv4
      with:
        # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
        tag_name: ${{steps.previoustag.outputs.tag}}
        # The name of the release. For example, `Release v1.0.1`
        release_name: Latest
        # Path to the file containing the release version
        csproj_path: NdiPlayer.csproj

    - name: Update release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: Installer\bin\**\*.msix       
